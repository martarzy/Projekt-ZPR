----------------------------------------------
Gracz podaje swoją nazwę: 
{   "message": "myName", 
    "myName": "NAZWAGRACZA" 
}

Serwer ocenia, czy zaakceptowana nazwa. Jeśli tak:
{   "message": "nameAccepted", 
    "valid": true
}

Jeśli gra już wystartowała:
{
    "message": "nameAccepted",
    "valid": "false",
    "error": "gameStarted"
}

Jeśli nie została zaakceptowana:
{
    "message": "nameAccepted",
    "valid": "false",
    "error": "notUniqueName"
}

Jeśli za dużo użytkowników:
{
    "message": "nameAccepted",
    "valid": "false",
    "error": "tooManyUsers"
}

--------------------------------------------
(Jeśli nazwa dobra)
Serwer zwraca listę uzytkownikow:
{   "message": "userList", 
    "userList": [ 
        "Nazwa1", 
        "Nazwa2"
    ] 
}
--------------------------------------------

Wykrycie nielegalnego działania
Serwer, w momencie wykrycia jakiegoś nielegalnego działania wysyła wiadomość do klienta, który podjął takie działanie.
{
    "message": "invalidOperation",
    "error": <String - kod błędu>
}


Użytkownik gotowy do rozpoczęcia: 
{   "message": "ready"    
}

Serwer daje sygnał startu: 
{   "message": "start" 
}
--------------------------------------------
Serwer inicjuje turę użytkownika: 
{   "message": "newTurn"
    "player": "NAZWA"
}

Użytkownik rzuca kostką
{   "message": "rollDice" 
}

Serwer podaje ruch użytkownika
{   "message": "playerMove", 
    "player": "NAZWA", 
    "move": LICZBA
}
--------------------------------------------
Serwer podaje nową ilość pieniędzy na koncie gracza (dowolnego):
{
    "message": "setCash",
    "player": "NAZWA",
    "cash": LICZBA
}
--------------------------------------------
Użytkownik kupuje pole
{
    "message": "buyField"
}

Użytkownik kończy turę
{
    "message": "endOfTurn"
}

Serwer podaje informację o zakupie dokonanym przez użytkownika
{
    "message": "userBought",
}

Użytkownik zastawia pole
{
	"message": "mortgage",
	"field" : <nr pola>
}

Serwer podaje informację o zastawieniu pola
{
	"message": userMortgaged
	"field" : <nr pola>
}

Użytkownik wykupuje pole z zastawu
{
	"message": "unmortgage",
	"field": <nr pola>
}

Serwer podaje informację o wykupieniu pola z zastawu
{
	"message": "userUnmortgaged",
	"field": <nr pola>
}
---------------------------------------------
Użytkownik kupuje domek (hotel)
{
    "message": "buyHouse",
    "field": <nrPola>
}

Serwer podaje informację o zakupie domku
{
    "message": "userBoughtHouse",
    "field": <nrPola>,

Użytkownik sprzedaje domek (hotel)
{
    "message": "sellHouse",
    "field": <nrPola>
}

Serwer podaje informację o sprzedaży domku
{
    "message": "userSoldHouse",
    "field": <nrPola>
}
-----------------------------------------------
Użytkownik składa ofertę innemu:
{
    "message": "trade",
    "otherUsername": <other user name>
    "offeredFields": [ field1_no, field2_no ]
    "offeredCash": <cash>
    "demandedFields": [ field1_no, field2_no ]
    "demandedCash": <cash>
}

Serwer informuje o ofercie (wszystkich graczy):
Identyczna wiadomość, jak złożenie oferty

Użytkownik odpowiada na ofertę:
{
    "message": "tradeAcceptance",
    "accepted": true/false
}
------------------------------------------------
Serwer informuje o wylosowanej karcie szansy:

1. GOTO
{
    "message": "chance",
    "action": "goto",
    "field": <nr pola>
}

2. MOVE
{
    "message": "chance",
    "action": "move",
    "move": <liczba pól, o które ma się przesunąć, może być ujemna!>
}

3. CASH ( = PAY / GET)
{
    "message": "chance"
    "action": "cash"
    "reason": <powód, dla którego trzeba zapłacić>
    "cash": <kwota, jaką otrzymujesz - może być ujemna!>
}

4. GET OUT OF JAIL
{
    "message": "chance"
    "action": "getOut"
}

5. GO TO JAIL
{
    "message": "chance"
    "action": "gotoJail"
}
-------------------------------------------------
Użytkownik wychodzi z więzienia
{
    "message": "getOut",
    "method": "pay"/"useCard"
}
-------------------------------------------------
Użytkownik deklaruje bankructwo:
{
    "message": "declareBankruptcy"
}
Serwer rozsyła tę wiadomość wszystkim.
-------------------------------------------------
KONIEC GRY
Serwer informuje o końcu gry:
{
    "message": "gameOver"
}
